<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"

    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">



<html xmlns="http://www.w3.org/1999/xhtml">

<head>

    <meta name="generator"

          content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />

    <meta content="text/html; charset=us-ascii"

          http-equiv="content-type" />



    <title>ElectricFlow Plugin for WebLogic</title>

    <link rel="stylesheet"

          href="../../plugins/@PLUGIN_KEY@/pluginhelp.css"

          type="text/css"

          media="screen" />

</head>

<body>

    <div class="help">

        <h1>Oracle WebLogic Server</h1>

        <p>Plugin Version @PLUGIN_VERSION@</p>

        <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;"

            noshade="noshade" />
						
			<p>Revised on June 17, 2015</p>
				
				<h1>Contents</h1>
				
				<ul>
				<li><p><a href="#overview">Overview</a></p></li>
				<li><p><a href="#setupconfig">Setting Up the Plugin Configuration</a></p></li>
				<li><p><a href="#procedures">Plugin Procedures</a></p></li>
				<ul>
				<li><a href="#CheckPageStatus">CheckPageStatus</a></li>
				<li><a href="#CheckServerStatus">CheckServerStatus</a></li>
				<li><a href="#CreateDatasource">CreateDatasource</a></li>
				<li><a href="#DeleteDatasource">DeleteDatasource</a></li>
				<li><a href="#DeployApp">DeployApp</a></li>
				<li><a href="#ResumeServer">ResumeServer</a></li>
				<li><a href="#RunDeployer">RunDeployer</a></li>
				<li><a href="#RunWLST">RunWLST</a></li>
				<li><a href="#StartAdminServer">StartAdminServer</a></li>
				<li><a href="#StartApp">StartApp</a></li>
				<li><a href="#StartManagedServer">StartManagedServer</a></li>
				<li><a href="#StartNodeManager">StartNodeManager</a></li>
				<li><a href="#StopAdminServer">StopAdminServer</a></li>
				<li><a href="#StopApp">StopApp</a></li>
				<li><a href="#StopManagedServer">StopManagedServer</a></li>
				<li><a href="#StopNodeManager">StopNodeManager</a></li>
				<li><a href="#SuspendServer">SuspendServer</a></li>
				<li><a href="#UndeployApp">UndeployApp</a></li>
				</ul>
				<li><p><a href="#example">Examples and Use Cases</a></p></li>
				<li><p><a href="#rns">Release Notes</a></p></li>
				</ul>
			
		<h1 id="overview">Overview</h1>    
      
			
        <!-- The tool description should answer these kinds of questions:

                                    What is the tool itself is used for in the development

                                    process? Who would use this tool? What is the general use-case or

                                    problem that this tool solves? Look at the tool's documentation or

                                    website(s) to get their own descriptions. Look at Wikipedia or other

                                    outside websites. If there is a Hudson plugin, read their

                                    documentation for ideas, examples, etc. It's OK to copy word-for-word

                                    only if appropriate, such as FOSS - but not commercial software.

                                    -->



        <p>WebLogic is a server software application that runs on a

        middle tier, between back-end databases and related

        applications and browser-based thin clients. The main

        features of WebLogic server include connectors that make it

        possible for any legacy application on any client to

        interoperate with server applications, Enterprise JavaBean

        (EJB) components, resource pooling, and connection sharing

        that make applications very scalable. An administration

        console with a user interface makes management tasks more

        efficient and features such as Secure Sockets Layer (SSL)

        support for the encryption of data transmissions, as well

        as authentication and authorization mechanisms, make

        applications and secure.</p>

        <p>For more information about WebLogic, go to <a href="http://www.oracle.com/technetwork/middleware/weblogic/overview/index.html">

            WebLogic home page</a>.</p>

        <h2>ElectricFlow Integration to WebLogic</h2>

        <!-- The integration description should answer the questions:

                                    How deep does our integration go? Why should I care? What general

                                    functionality does the plugin include? What functionality does

                                    the plugin omit?

                                    -->



        <p>Use this plugin to interact with the Oracle WebLogic server for application 
		
		and server management, interacting or editing existing applications, and deploying new applications.
				
		You can start and stop both the Managed Servers and the Administration Server

        using this integration. You can use Jython scripting to create script files 
				
		or to enter a new embedded file.</p>



        <h2>Integrated Version</h2>


        <p>This plugin was developed and tested against WebLogic version 10.3.</p>
		
		<p>IMPORTANT: For all parameter descriptions in this document, required parameters are shown in <span class='required'>bold 
				 italics</span>.</p>
				
		<p>IMPORTANT: In the ElectricFlow UI, go to the Home page, open the Main Menu, and click <b>Admin</b> > <b>Plugins</b> to open the 
		Plugin Manager.</p>

        <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>

        <p>Plugin configurations are sets of parameters that apply across some or all of the plugin procedures. 
		    They reduce repetition of common values, create predefined sets of parameters for end users, and store 
		    credentials securely. Each configuration has a unique name that is automatically entered in designated 
		    parameters in the procedures.</p>
						
		<h2>Input</h2>
  
        <ol>
		    <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
		    <li>Find the EC-WebLogic row.</li>
		    <li>Click <b>Configure</b> to open the WebLogic Configurations page.</li> 	
		    <li>Click <b>Create Configuration</b>.</li>
		    <li>To create a WebLogic configuration, enter the following information and click <b>OK</b>. 
			<br /> Remember that you may need to create additional configurations later.</li>

            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
					 <tr>
                        <td class='required'>Configuration Name</td>
                        <td>Name of the plugin configuration.</td>
                    </tr>
                    <tr>
                        <td class='required'>WebLogic URL</td>
                        <td>The URL of the WebLogic server that includes the protocol, server, and port.</td>		
                    </tr>
                    <tr>
                        <td class='required'>Login as</td>
                        <td>
												<ul>
												<li><b>User Name</b>: Enter the name of the WebLogic user.</li>
												<li><b>Password</b>: Enter the password for the WebLogic user name.</li>
												<li><b>Retype Password</b>: Re-enter the password for the WebLogic user name.</li>
												</ul>
												</td>
                    </tr>
                    </tbody>
            </table>
		
		    <img src="../../plugins/EC-WebLogic/images/Config/EC-WLSConfig.png" />
		
		    <p><b>Note:</b> In the URL, the protocol is "t3."  The 

            RMI communications in WebLogic Server use

            the "t3" protocol to transport data between WebLogic

            Server and other Java programs, including clients and

            other WebLogic Server instances. A server instance

            keeps track of each Java Virtual Machine (JVM) with

            which it connects, and creates a single "t3" connection

            to carry all traffic for a JVM. This proctocol is used

            in most of the procedures of the WebLogic Plugin.</p>
				
		    </ol>
						
	        <h2>Output</h2>	 
		
		    <p>The WebLogic Configurations page now shows the new configuration.</p>
		
		    <p>You can also manage your WebLogic configurations in this page. Click <b>Edit</b> to modify an existing configuration or 
		    <b>Delete</b> to remove an existing configuration.</p>
						
				
		<h1 id="procedures">Plugin Procedures</h1>
   
        <div id="CheckPageStatus">

            <a name="CheckPageStatus"

                 id="CheckPageStatus"></a> 



            <h2>CheckPageStatus</h2>



            <p>This procedure checks the status of the specified page.</p>

            <h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the CheckPageStatus procedure.</li>
			      <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td>Credentials to be entered</td>

                        <td>The credentials required to check the

                        status of the page.</td>

                    </tr>



                    <tr>

                        <td>Maximum Elapsed Time</td>



                        <td>Defines the maximum time in seconds

                        that the job will try to check into the

                        server. If no value is entered, there is no wait time

                        (the URL is checked only one time).</td>

                    </tr>



                    <tr>

                        <td class='required'>Target URL</td>



                        <td>URL of the page to check.

                        </td>

                    </tr>



                    <tr>

                        <td>Success Criteria</td>



                        <td>The expected result when the 

                        server status is checked.</td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/CheckPageStatus/EC-WLSCheckPageStatus2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the page was checked successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/CheckPageStatus/EC-WLSCheckPageStatus3.png" />
		
		        <p>In the <b>CheckPageStatus</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/CheckPageStatus/EC-WLSCheckPageStatus4.png" />
				</p>

            
                <p><b>Note:</b> In the URL, the protocol is http. For this procedure, 
				
				ElectricFlow uses an internal method to test the status of the 

                page URLs with the original http protocol used in the web browsers.</p>

        </div>

		<div id="CheckServerStatus">

            <a name="CheckServerStatus"

                 id="CheckServerStatus"></a> 



            <h2>CheckServerStatus</h2>



            <p>This procedure checks the status of the specified server.</p>

            <h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the CheckServerStatus procedure.</li>
			      <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td>Configuration Name</td>



                        <td>Name of the configuration to be used.

                        URL, port and credentials are from

                        the specified configuration.</td>

                    </tr>



                    <tr>

                        <td class='required'>Wlst Script Absolute

                        Path</td>



                        <td>Absolute path to WLST. such as 

                        "/path/to/wlst.cmd" <i>or</i>"wlst.sh".

                        </td>

                    </tr>



                    <tr>

                        <td>Maximum Elapsed Time</td>



                        <td>Defines the maximum time in seconds

                        that the job will try to check into the

                        server. If no value is entered, there is no wait time

                        (the URL is checked only one time).</td>

                    </tr>



                    <tr>

                        <td class='required'>Success Criteria</td>



                        <td>The expected result when the server status

                        is checked. </td>

                    </tr>



                    <tr>

                        <td class='required'>Instance Name</td>


                        <td>Name of the instance to check. </td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/CheckServerStatus/EC-WLSCheckServerStatus2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The status of the server was checked successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/CheckServerStatus/EC-WLSCheckServerStatus3.png" />
		
		        <p>In the <b>CheckServerStatus</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/CheckServerStatus/EC-WLSCheckServerStatus4.png" />
				</p>
			
        </div>

        <div id="CreateDatasource">

            <a name="CreateDatasource"

                 id="CreateDatasource"></a> 



            <h3>CreateDatasource</h3>



            <p>This procedure creates a datasource in WebLogic.</p>

			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the CreateDatasource procedure.</li>
			      <li>Enter the following parameters:<br />
						
           <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>


                <tbody>

                    <tr>

                        <td class='required'>Configuration</td>



                        <td>Configuration name from which the Admin URL and credentials are read.</td>

                    </tr>

                    <tr>

                        <td class='required'>WLST Absolute Path</td>

                        <td>Absolute path to WLST, such as /path/to/wlst.cmd or wlst.sh.</td>

                    </tr>

                    <tr>

                        <td class='required'>Datasource Name</td>

                        <td>A unique name for the datasource in the WebLogic domain.</td>

                    </tr>



                    <tr>

                        <td class='required'>Database</td>

                        <td>The database used by the datasource.</td>

                    </tr>

                    <tr>

                        <td class='required'>Server Instance</td>


                        <td>Instance name of the server that includes the datasource, such as AdminServer.</td>

                    </tr>


                    <tr>

                        <td>Datasource JNDI</td>


                        <td>The JNDI path to which this datasource is bound. By default, the JNDI name is the name 
						
						of the datasource. Applications that look up the JNDI path will get a "javax.sql.Datasource" instance 
						
						that corresponds to the datasource.</td>

                    </tr>



                    <tr>

                        <td class='required'>Datasource Driver Class</td>

                        <td>The full package name of JDBC driver class used to create the physical database connections in the connection pool.

						This driver class must be in the classpath of any server to which it is deployed.</td>

                    </tr>



                    <tr>

                        <td class='required'>Datasource URL</td>



                        <td>The URL of the database to connect to. The format of the URL varies by JDBC driver. The URL is passed to 
						
						the JDBC driver to create the physical database connections.</td>

                    </tr>



                    <tr>

                        <td class='required'>Database User</td>



                        <td>The user who connects to the database.</td>

                    </tr>

                    <tr>

                        <td class='required'>Database Password</td>



                        <td>The password attribute passed to the JDBC driver when creating physical database connections. The value is stored 
						
						in an encrypted form in the descriptor file and is displayed on the Administration Console.</td>

                    </tr>

                </tbody>

            </table>
			
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/CreateDatasource/EC-WLSCreateDatasource2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was created successfully.</p>
		       <img src="../../plugins/EC-WebLogic/images/CreateDatasource/EC-WLSCreateDatasource3.png" />
		
		        <p>In the <b>CreateDatasource</b> step, click the Log button to see the diagnostic information: 
		       <img src="../../plugins/EC-WebLogic/images/CreateDatasource/EC-WLSCreateDatasource4.png" />>
				</p>

        </div>



        <div id="DeleteDatasource">

            <a name="DeleteDatasource"

                 id="DeleteDatasource"></a> 



            <h2>DeleteDatasource</h2>

			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the DeleteDatasource procedure.</li>
			      <li>Enter the following parameters:<br />
						
           <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class='required'>Configuration</td>



                        <td>Configuration name from which the Admin URL and credentials are read.</td>

                    </tr>



                    <tr>

                        <td class='required'>WLST Absolute Path</td>



                        <td>Absolute path to the WLST, such as /path/to/wlst.cmd or wlst.sh.</td>

                    </tr>



                    <tr>

                        <td class='required'>Datasource Name</td>



                        <td>The unique name for the datasource in the WebLogic domain.</td>

                    </tr>

                </tbody>

            </table>
			
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/DeleteDatasource/EC-WLSDeleteDatasource2.png" />

		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The database was deleted successfully.</p>
		       <img src="../../plugins/EC-WebLogic/images/DeleteDatasource/EC-WLSDeleteDatasource3.png" />
		
		        <p>In the <b>DeleteDatasource</b> step, click the Log button to see the diagnostic information: 
		       <img src="../../plugins/EC-WebLogic/images/DeleteDatasource/EC-WLSDeleteDatasource4.png" />
				</p>

        </div>
		
		<div id="DeployApp"> <a name="DeployApp" id="DeployApp"></a> 

            <h2>DeployApp</h2>
						
			<p>This procedure deploys or redeploys an application or module using

            the weblogic.Deployer Java class.</p>


			<h3>Input</h3>
			
            <ol>
				<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			    <li>Go to the DeployApp procedure.</li>
			    <li>Enter the following parameters:<br />
						
			    <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Java Absolute Path</td>

                        <td>Absolute path of java. For example: i.e: "java", "java.exe", or "/path/to/java".</td>

                    </tr>

                    <tr>

                        <td>Java Parameters</td>

                        <td>Java parameters to pass, such as -verbose.</td>

                    </tr>

                    <tr>

                        <td class='required'>Application Name</td>

                        <td>Deployment name to assign to a newly deployed application or standalone module. </td>

                    </tr>

                    <tr>

                        <td class='required'>Application Path</td>

                        <td>Absolute path of the application to deploy, such as "/path/to/webapp.war" or "c:/mydir/webapp.war".</td>

                    </tr>

                    <tr>

                        <td>Configuration Name</td>

                        <td>Name of the configuration to use when the URL and credentials for the Administration Server are retrieved.</td>

                    </tr>

                    <tr>

                        <td>Targets</td>

                        <td>Targets on which to deploy the application or module in a comma-separated list

                        of the target servers, clusters, or virtual hosts.</td>

                    </tr>

                    <tr>

                        <td>Additional Commands</td>

                        <td>Additional commands to be entered in the weblogic.Deployer tool.</td>

                    </tr>


                    <tr>

                        <td>setDomainEnv Script Absolute Path</td>

                        <td>Absolute path of the setDomainEnv script, including filename and extension.

                        For example, "/path/to/setDomainEnv.sh" or "setDomainEnv.cmd".</td>

                    </tr>

                    <tr>

                        <td>weblogic jar Absolute Path</td>



                        <td>Absolute path of the weblogic.jar file that is required 

                        to run the Deploy function. In a  

                        Windows environment, if the jar file is already

                        added to the environment classpath variable,

                        it is not necesary to include it. In a 

                        Linux environment,  you must include the

                        path, such as "/path/to/weblogic.jar" or 

                       "/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar".</td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		    <br />
			
	        <img src="../../plugins/EC-WebLogic/images/DeployApp/EC-WLSDeployApp2.png" />
		        
			<br />

		    </ol>   
						
		    <h3>Output</h3>
						
		    <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. 
			
			The application was deployed successfully.</p>
			
		    <img src="../../plugins/EC-WebLogic/images/DeployApp/EC-WLSDeployApp3.png" />
		
		    <p>In the <b>DeployApp</b> step, click the Log button to see the diagnostic information:</p>
			
	        <img src="../../plugins/EC-WebLogic/images/DeployApp/EC-WLSDeployApp4.png" />.	 

        </div>

        <div id="ResumeServer">

            <a name="ResumeServer"

                 id="ResumeServer"></a> 

            <h2>ResumeServer</h2>

            <p>This procedure moves a server instance from the STANDBY state to the RUNNING state.</p>

            <h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the SuspendServer procedure.</li>
			      <li>Enter the following parameters:<br />
						
           <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>



                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class='required'>Configuration</td>



                        <td>Configuration name from which the Admin URL and credentials are read.</td>

                    </tr>



                    <tr>

                        <td class='required'>WLST Absolute Path</td>



                        <td>Absolute path to the WLST, such as path/to/wlst.cmd or wlst.sh.</td>

                    </tr>



                    <tr>

                        <td class='required'>Server Name</td>



                        <td>Name of the server.</td>

                    </tr>

                    <tr>

                        <td>Block</td>


                        <td>Boolean value specifying whether WLST blocks user interaction until the server is started. 
						
						This argument defaults to false, indicating that user interaction is not blocked. In this case, 
						
						WLST returns control to the user after issuing the command and assigns the task MBean associated 
						
						with the current task to a variable that you can use to check its status. If you are importing WLST 
						
						as a Jython module, as described in Importing WLST as a Jython Module, block is always set to true.</td>

                    </tr>

                </tbody>

            </table>
			
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/ResumeServer/EC-WLSResumeServer2.png" />

		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server instance successfully 
				moved from the STANDBY state to the RUNNING state.</p>
		        <img src="../../plugins/EC-WebLogic/images/ResumeServer/EC-WLSResumeServer3.png" />
		
		        <p>In the <b>ResumeServer</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/ResumeServer/EC-WLSResumeServer4.png" />
				</p>
            
        </div>

        <div id="RunDeployer"> <a name="RunDeployer" id="RunDeployer"></a> 

            <h2>RunDeployer</h2>

            <p>This procedure runs weblogic.Deployer tool in a free mode.

            The weblogic.Deployer tool is a Java-based deployment tool that

            provides a command-line interface to the WebLogic Server deployment API.</p>
						
			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the RunDeployer procedure.</li>
			      <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Command to Use</td>

                        <td>The weblogic.Deployer command to use, such sa "-deploy", "-undeploy", "-stop" or "-listapps".

                        </td>

                    </tr>

                    <tr>

                        <td>Java Parameters</td>

                        <td>Java parameters to pass, such as "-verbose".</td>

                    </tr>
										
										 <tr>

                        <td class='required'>Configuration Name</td>

                        <td>Name of the configuration to use when the Administration Server URL and credentials are retrieved.</td>

                    </tr>

										 <tr>

                        <td>Additional Commands</td>

                        <td>Additional commands to be entered in the 

                        weblogic.Deployer tool.</td>

                    </tr>

										 <tr>

                        <td>Java Absolute Path</td>

                        <td>Absolute path of java, such as "java", "java.exe" or "/path/to/java".</td>
                    </tr>
										
                    <tr>

                        <td class='required'>Application Name</td>

                        <td>Name of the application to stop, such as "webapp". </td>

                    </tr>

                    <tr>

                        <td>setDomainEnv Script Absolute Path</td>

                        <td>Absolute path of the setDomainEnv

                        script, including filename and extension, such as 
												
						"/path/to/setDomainEnv.sh" or "setDomainEnv.cmd".</td>

                    </tr>



                    <tr>

                        <td>weblogic jar Absolute Path</td>


                        <td>Absolute path of the weblogic.jar file that is 

                        required to run the stop application

                        operation. In a Windows environment, if the

                        jar file has already been added to the environment

                        classpath variable, it is not necessary to

                        include it. In a Linux environment you must

                        include the path, such as "/path/to/weblogic.jar" or 

                        "/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar".</td>

                    </tr>

                </tbody>

            </table>

     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/RunDeployer/EC-WLSRunDep2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The weblogic.Deployer tool was run  
		        successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/RunDeployer/EC-WLSRunDep3.png" />
		
		        <p>In the <b>RunDeployer</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/RunDeployer/EC-WLSRunDep4.png" />.
						</p> 

            </div>



        <div id="RunWLST"> <a name="RunWLST" id="RunWLST"></a> 


            <h2>RunWLST</h2>

            <p>This procedure runs Jython scripts using weblogic.WLST. The

            WebLogic Scripting Tool (WLST) is a command-line

            scripting interface that system administrators and

            operators use to monitor and manage WebLogic Server

            instances and domains. The WLST scripting environment

            is based on the Java scripting interpreter, Jython. In

            addition to WebLogic scripting functions, you can use

            common features of interpreted languages, including

            local variables, conditional variables, and flow

            control statements.</p>

			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the RunWSLT procedure.</li>
			      <li>Enter the following parameters:<br />
						
             <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>WLST Absolute Path</td>

                        <td>Absolute path to WLST, such as "/path/to/wlst.cmd" or "wlst.sh".

                        </td>

                    </tr>

                    <tr>

                        <td>Script File Absolute Path</td>


                        <td>Absolute path of a Jython script

                        containing the desired job. The path is

                        used only if "Supplied File" is selected in

                        the "Script File Source" parameter, such as 

                        "/path/to/scriptfile.jython".</td>

                    </tr>



                    <tr>

                        <td class='required'>Script File Source</td>



                        <td>Source of the script file

                        to execute: an existing file in the

                        path defined in the "Script File" parameter 

                        or a new one using the code specified in

                        "Script File" parameter. </td>

                    </tr>



                    <tr>

                        <td>Script File</td>



                        <td>Content of the script file to run if the 

                        "New Script File" option is chosen in the

                        "Script File Source" parameter.</td>

                    </tr>



                    <tr>

                        <td>Additional Commands</td>



                        <td>Additional commands to enter in 

                        weblogic.WLST.</td>

                    </tr>



                    <tr>

                        <td>weblogic jar Absolute Path</td>



                        <td>Absolute path of the weblogic.jar file that are 

                        required to run Jython scripts using

                        weblogic.WLST. In a Windows environment, if

                        the jar file is already added to the environment

                        classpath variable, then is not necessary to

                        include it. In a Linux environment you must

                        include the path, such as 

                        "/path/to/weblogic.jar" or 

                        "/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar".</td>

                    </tr>

                </tbody>

            </table>

            </li>

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>To see a complete example, go to the <i>Examples and Use Cases</i> section.</p>

        </div>

        <div id="StartAdminServer"> <a name="StartAdminServer" id="StartAdminServer"></a> 

            <h2>StartAdminServer</h2>
 
            <p>This procedure starts the WebLogic Administration Server.</p>

			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the StartAdminServer procedure.</li>
			      <li>Enter the following parameters:<br />
						
             <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>


                <tbody>

                    <tr>

                        <td class='required'>Script Location</td>

                        <td>Absolute path of the startWeblogic

                        script, including filename and extension.

                        For example, "/path/to/startWeblogic.cmd".

                        </td>

                    </tr>



                    <tr>

                        <td class='required'>Admin Server Instance

                        Name</td>


                        <td>Instance name of the Administration Server to

                        start, such as "AdminServer". </td>

                    </tr>



                    <tr>

                        <td class='required'>Config Name</td>



                        <td>Configuration name from which the Admin

                        URL and credentials are read. 

                        </td>

                    </tr>



                    <tr>

                        <td class='required'>WLST Absolute Path</td>



                        <td>Absolute path to WLST, such as 
												
                        "/path/to/wlst.cmd" or "wlst.sh".

                        </td>

                    </tr>



                    <tr>

                        <td>Maximum Elapsed Time</td>

                        <td>The maximum time in seconds

                        that the job will try to check into the

                        server. The step has a "Time

                        Limit" property, so if this property is set

                        to less than the parameter value, it will abort

                        the step early. If no value is entered, there is no wait time

                        (the URL is checked only one time).</td>

                    </tr>

                </tbody>

            </table>
     
		 				</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/StartAdministrationServer/EC-WLSStartAdministrationServer2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was started  
		        successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/StartAdministrationServer/EC-WLSStartAdministrationServer3.png" />
		
		        <p>In the <b>StartAdminServer</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/StartAdministrationServer/EC-WLSStartAdministrationServer4.png" />.
						</p> 
						
        </div>

        <div id="StartApp"> <a name="StartApp" id="StartApp"></a> 

            <h2>StartApp</h2>

            <p>This procedures starts an application.</p>

			<h3>Input</h3>
			
            <ol>
				<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			    <li>Go to the StartApp procedure.</li>
			    <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Java Absolute Path</td>

                        <td>Absolute path to Java, such as "java",

                        "java.exe", or "/path/to/java".

                        </td>

                    </tr>

                    <tr>

                        <td>Java Parameters</td>

                        <td>Java parameters to pass, such as "-verbose".</td>

                    </tr>



                    <tr>

                        <td class='required'>Application Name</td>

                        <td>Name of the application to start, such as "webapp". </td>

                    </tr>

                    <tr>

                        <td>Configuration Name</td>

                        <td>Name of the configuration to be used

                        for retrieving Administration Server URL and

                        credentials.</td>

                    </tr>

                    <tr>

                        <td>Additional Commands</td>

                        <td>Additional commands to be entered in the 

                        weblogic.Deployer tool.</td>

                    </tr>

                    <tr>

                        <td>setDomainEnv Script Absolute Path</td>

                        <td>Absolute path of the setDomainEnv script, including filename and extension, such as 
												
							"/path/to/setDomainEnv.sh" or "setDomainEnv.cmd".</td>

                    </tr>

                    <tr>

                        <td>weblogic jar Absolute Path</td>

                       <td>Absolute path of the weblogic.jar file that is 

                        needed to run the start application

                        operation. In a Windows environment, if the

                        jar file has already added been to the environment

                        classpath variable, it is not necesary to

                        include it. In a Linux environment you must

                        include the path, such as or "/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar".</td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		    <br />
			
	        <img src="../../plugins/EC-WebLogic/images/StartApp/EC-WLSStartApp2.png" />
			
		    <br />

		    </ol>   
						
		    <h3>Output</h3>
						
		    <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application 
			
			was started successfully.</p>
			
		    <img src="../../plugins/EC-WebLogic/images/StartApp/EC-WLSStartApp3.png" />
		
		    <p>In the <b>StartApp</b> step, click the Log button to see the diagnostic information:</p>
			
		    <img src="../../plugins/EC-WebLogic/images/StartApp/EC-WLSStartApp4.png" />.
					 
        </div>

        <div id="StartManagedServer">

            <a name="StartManagedServer"

                 id="StartManagedServer"></a> 



            <h2>StartManagedServer</h2>



            <p>This procedure starts a WebLogic Managed Server. A WebLogic Server

            administration domain is a logically related group of

            WebLogic Server resources. Usually, you configure a

            domain to include additional WebLogic Server instances

            called Managed Servers. You deploy Web applications,

            EJBs, and other resources onto the Managed Servers and

            use the Administration Server for configuration and

            management purposes only. The Node Manager

            must be running before you run this procedure.</p>



            <p>In order to start the managed server, a file called

            "boot.properties" must be created in the path

            "$DOMAIN_DIR$/servers/myserver/security", and this file

            must have the credentials needed to start the server.

            For example:</p>

            <p>username=weblogic</p>

            <p>password=w3blogic</p>
			
			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the StartManagedServer procedure.</li>
			      <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class='required'>Script Location</td>


                        <td>Absolute path of the start server

                        script, including filename and extension, such as 

                        "/path/to/startManagedServer.cmd".

                        </td>

                    </tr>



                    <tr>

                        <td class='required'>Instance Name</td>

                        <td>Instance name of the Managed Server to

                        start. </td>

                    </tr>

                    <tr>

                        <td class='required'>Config Name</td>


                        <td>Configuration name from which the

                        Managed Server URL and the credentials from

                        the Administration Server are read.

                        </td>

                    </tr>



                    <tr>

                        <td class='required'>Admin Server URL</td>



                        <td>URL from the Administration Server (including 

                        protocol and port). </td>

                    </tr>



                    <tr>

                        <td class='required'>WLST Absolute

                        Path</td>

                        <td>Absolute path to WLST, such as 

                        "/path/to/wlst.cmd" or "wlst.sh".

                        </td>

                    </tr>



                    <tr>

                        <td>Maximum Elapsed Time</td>



                        <td>The maximum time in seconds

                        that the job will try to check into the

                        server. The step has a "Time

                        Limit" property, so if this property is set

                        to less than the parameter value, it will abort

                        the step early. If no value is entered, there is no wait time

                        (the URL is checked only one time).</td>

                    </tr>

                </tbody>

            </table>
     
		 				</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/StartManagedServer/EC-WLSStartManagedServer2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was started  
		        successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/StartManagedServer/EC-WLSStartManagedServer3.png" />
		
		        <p>In the <b>StartManagedServer</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/StartManagedServer/EC-WLSStartManagedServer4.png" />
				</p>

              </div>

        
		
		<div id="StartNodeManager">

            <a name="StartNodeManager"

                 id="StartNodeManager"></a> 



            <h2>StartNodeManager</h2>



            <p>This procedure starts the WebLogic Node Manager. It is a

            WebLogic Server utility that enables you to start, shut

            down, and restart Administration Server and Managed

            Server instances from a remote location. Although Node

            Manager is optional, we recommend that you start the

            Node Manager if your WebLogic Server environment hosts 
			
			applications with high availability requirements.</p>


			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the StartNodeManager procedure.</li>
			      <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class='required'>Node Manager Script

                        Location</td>



                        <td>Absolute path of the startNodeManager

                        script, including filename and extension, such as 

                        /Oracle/Middleware/wlserver_10.3/server/bin/startNodeManager.cmd.

                        </td>

                    </tr>



                    <tr>

                        <td>Maximum Elapsed Time</td>



                        <td>Defines the time in seconds that the

                        job waits to test the status of the node

                        manager. The step has a "Time

                        Limit" property so that if this property is set

                        to less than the parameter value, it will abort

                        the step early. If no value is entered, there is no wait time

                        (the URL is checked only one time).</td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/StartNodeManager/EC-WLSStartNodeManager2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Node Manager was started 
				successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/StartNodeManager/EC-WLSStartNodeManager3.png" />
		
		        <p>In the <b>StartNodeManager</b> step, click the Log button to see the diagnostic information: 
		       <img src="../../plugins/EC-WebLogic/images/StartNodeManager/EC-WLSStartNodeManager4.png" />
				</p>

        </div>
		
		<div id="StopAdminServer">

            <a name="StopAdminServer"

                 id="StopAdminServer"></a> 

            <h2>StopAdminServer</h2>

            <p>This procedure stops a WebLogic Administration Server.</p>
			
			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the StopAdminServer procedure.</li>
			      <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Script Location</td>

                        <td>Absolute path of the stopWeblogic

                        script, including filename and extension, such as 
						
						"/path/to/stopWeblogic.cmd".

                        </td>

                    </tr>

                    <tr>

                        <td class='required'>Config Name</td>

                        <td>Configuration name from which the URL

                        and credentials are retrieved.

                        </td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		      <br />
	          <img src="../../plugins/EC-WebLogic/images/StopAdminServer/EC-WLSStopAdminServer2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was stopped   
		        successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/StopAdminServer/EC-WLSStopAdminServer3.png" />
		
		        <p>In the <b>StopAdminServer</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/StopAdminServer/EC-WLSStopAdminServer4.png" />
				</p>


        </div>
		
		<div id="StopApp"> <a name="StopApp" id="StopApp"></a> 

            <h2>StopApp</h2>

            <p>This procedure stops an application.</p>

			<h3>Input</h3>
			
            <ol>
				<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			    <li>Go to the StopApp procedure.</li>
			    <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Java Absolute Path</td>

                        <td>Absolute path of java, such as "java", "java.exe", or "/path/to/java".

                        </td>

                    </tr>

                    <tr>

                        <td>Java Parameters</td>

                        <td>Java parameters to pass, such as "-verbose".</td>

                    </tr>

                    <tr>

                        <td class='required'>Application Name</td>

                        <td>Name of the application to stop, such as "webapp". </td>

                    </tr>

                    <tr>

                        <td>Enable Graceful Mode</td>

                        <td>Enables stopping the application in

                        Graceful Mode after existing HTTP clients

                        have completed their work.</td>

                    </tr>

                    <tr>

                        <td>Configuration Name</td>

                        <td>Name of the configuration to use when 
											
                        the Administration Server URL and

                        credentials are retrieved.</td>

                    </tr>

                    <tr>

                        <td>Additional Commands</td>

                        <td>Additional commands to be entered in the 

                        weblogic.Deployer tool.</td>

                    </tr>

                    <tr>

                        <td>setDomainEnv Script Absolute Path</td>

                        <td>Absolute path of the setDomainEnv

                        script, including filename and extension, such as 
												
						"/path/to/setDomainEnv.sh" or "setDomainEnv.cmd".</td>

                    </tr>



                    <tr>

                        <td>weblogic jar Absolute Path</td>



                        <td>Absolute path of the weblogic.jar file that is 

                        required to run the stop application

                        operation. In a Windows environment, if the

                        jar file has already been added to the environment

                        classpath variable, it is not necessary to

                        include it. In a Linux environment you must

                        include the path, such as "/path/to/weblogic.jar" or 

                        "/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar".</td>

                    </tr>

                </tbody>

            </table>

     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/StopApp/EC-WLSStopApp2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was stopped  
		        successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/StopApp/EC-WLSStopApp3.png" />
		
		        <p>In the <b>StopApp</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/StopApp/EC-WLSStopApp4.png" />.
						</p>	 


            </div>
		
		<div id="StopManagedServer">

            <a name="StopManagedServer"

                 id="StopManagedServer"></a> 


            <h2>StopManagedServer</h2>



            <p>This procedure stops a WebLogic Managed Server. The Node

            Manager must be running before you run this procedure.</p>

			<h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the StartManagedServer procedure.</li>
			      <li>Enter the following parameters:<br />
						
           <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Script Location</td>



                        <td>Absolute path of the stop server

                        script, including the filename and extension, such as 

                        "/path/to/stopManagedServer.cmd".

                        </td>

                    </tr>



                    <tr>

                        <td class='required'>Instance Name</td>



                        <td>Instance name of the Managed Server to

                        stop. </td>

                    </tr>



                    <tr>

                        <td class='required'>Config Name</td>



                        <td>Configuration name from which the URL

                        is retrieved. </td>

                    </tr>

                </tbody>

            </table>
     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/StopManagedServer/EC-WLSStopManagedServer2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was stopped successfully.</p>
		        <img src="../../plugins/EC-WebLogic/images/StopManagedServer/EC-WLSStopManagedServer3.png" />
		
		        <p>In the <b>StopManagedServer</b> step, click the Log button to see the diagnostic information: 
		        <img src="../../plugins/EC-WebLogic/images/StopManagedServer/EC-WLSStopManagedServer4.png" />
				</p>

            </div>
		
		<div id="StopNodeManager">

            <a name="StopNodeManager"

                 id="StopNodeManager"></a> 



            <h2>StopNodeManager</h2>


            <p>This procedure stops the WebLogic Node Manager.</p>

            <h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the StopNodeManager procedure.</li>
			      <li>Enter the following parameters:<br />
						
           <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Config Name</td>



                        <td>Configuration name from which the

                        credentials are read. </td>

                    </tr>



                    <tr>

                        <td>Host Name</td>



                        <td>Host name of the Node Manager. The default 

                        is localhost.</td>

                    </tr>



                    <tr>

                        <td>Node Manager Port</td>



                        <td>Port number of Node Manager. The default 
						
						is a value based on the Node Manager server type.
						
						For the plain type, the default is 5556. For the rsh type,

                        the default is 514. For the ssh type, the default is 22. 
						
						For the ssl type, the default is 5556.</td>

                    </tr>



                    <tr>

                        <td>Domain Name</td>



                        <td>Name of the domain to manage. 
						
						The default is mydomain.</td>

                    </tr>



                    <tr>

                        <td>Domain Path</td>



                        <td>Path of the domain directory where

                        you want to save the Node Manager secret

                        file (nm_password.properties) and

                        SerializedSystemIni.dat file. The 

                        default is the directory in which WLST was

                        started.</td>

                    </tr>



                    <tr>

                        <td class='required'>WLST Absolute

                        Path</td>



                        <td>Absolute path to the WLST, such as /path/to/wlst.cmd  
						
						or wlst.sh.

                        </td>

                    </tr>



                    <tr>

                        <td>Node Manage Type</td>


                        <td>Type of the Node Manager server. The 

                        default is ssl.</td>

                    </tr>



                    <tr>

                        <td>Maximum Elapsed Time</td>



                        <td>Defines the time in seconds that the

                        job waits to test the status of the node

                        manager. The step has a "Time

                        Limit" property, so if this property is set

                        to less than the parameter value, it will abort

                        the step early. If no value is entered, there is no wait time

                        (the URL is checked only one time).</td>

                    </tr>

                </tbody>

            </table>     
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/StopNodeManager/EC-WLSStopNodeManager2.png" />
		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The Node Manager was stopped 
				successfully.</p>
		       <img src="../../plugins/EC-WebLogic/images/StopNodeManager/EC-WLSStopNodeManager3.png" />
		
		        <p>In the <b>StopNodeManager</b> step, click the Log button to see the diagnostic information: 
		       <img src="../../plugins/EC-WebLogic/images/StopNodeManager/EC-WLSStopNodeManager4.png" />
				</p>

            
        </div>

        <div id="SuspendServer">

            <a name="SuspendServer"

                 id="SuspendServer"></a> 



            <h2>SuspendServer</h2>



            <p>This procedure suspends a WebLogic server.</p>

            <h3>Input</h3>
			
            <ol>
				  <li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			      <li>Go to the SuspendServer procedure.</li>
			      <li>Enter the following parameters:<br />
						
           <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>


                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class='required'>Configuration</td>

                        <td>Configuration name from which the Admin URL and credentials are read.</td>

                    </tr>

                    <tr>

                        <td class='required'>WLST Absolute Path</td>

                        <td>Absolute path to the WLST, such as /path/to/wlst.cmd or wlst.sh.</td>

                    </tr>


                    <tr>

                        <td class='required'>Server Name</td>

                        <td>Name of the server to suspend.</td>

                    </tr>

                    <tr>

                        <td>Ignore Sessions</td>

                        <td>Boolean value specifying whether WLST should drop all HTTP sessions immediately or wait for HTTP sessions 
						
						to complete or time out while suspending. This argument defaults to false, indicating that HTTP sessions must 
						
						complete or time out.</td>

                    </tr>

                    <tr>

                        <td>Timeout</td>

                        <td>The time (in seconds) that the WLST waits for the server to complete in-progess work before suspending the server. 
						
						This argument defaults to 0 seconds, meaning that there is no timeout.</td>

                    </tr>

                    <tr>

                        <td>Force</td>

                        <td>Boolean value specifying whether WLST should suspend the server without waiting for active sessions to complete. 
						
						This argument defaults to false, indicating that all active sessions must complete before suspending the server.</td>

                    </tr>



                    <tr>

                        <td>Block</td>



                        <td>Boolean value specifying whether WLST blocks user interaction until the server is started. 
						
						This argument defaults to false, indicating that user interaction is not blocked. 
						
						In this case, WLST returns control to the user after issuing the command and assigns the task MBean 
						
						associated with the current task to a variable that you can use to check its status. 
						
						If you are importing WLST as a Jython module, as described in "Importing WLST as a Jython Module"
						
						in the Oracle WebLogic Server document on http://docs.oracle.com/en/middleware/, block is always set to true.</td>

                    </tr>

                </tbody>

            </table>
			
		 	</li>
						
		        <br />
	            <img src="../../plugins/EC-WebLogic/images/SuspendServer/EC-WLSSuspendServer2.png" />

		        <br />

		        </ol>   
						
		        <h3>Output</h3>
						
		        <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The server was suspended 
				
				successfully.</p>
		       <img src="../../plugins/EC-WebLogic/images/SuspendServer/EC-WLSSuspendServer3.png" />
		
		        <p>In the <b>SuspendServer</b> step, click the Log button to see the diagnostic information: 
		       <img src="../../plugins/EC-WebLogic/images/SuspendServer/EC-WLSSuspendServer4.png" />
				</p>
       
            </div>

			<div id="UndeployApp"> <a name="UndeployApp" id="UndeployApp"></a> 

            <h2>UndeployApp</h2>

            <p>This procedure stops the deployment unit and removes staged files

            from target servers.</p>

            <h3>Input</h3>
			
            <ol>
				<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			    <li>Go to the UndeployApp procedure.</li>
			    <li>Enter the following parameters:<br />
						
            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>

                        <th>Description</th>

                    </tr>

                </thead>

                <tbody>

                    <tr>

                        <td class='required'>Java Absolute Path</td>

                        <td>Absolute path to Java, such as "java", "java.exe", or "/path/to/java".

                        </td>

                    </tr>

                    <tr>

                        <td>Java Parameters</td>

                        <td>Java parameters to pass, such as "-verbose".</td>

                    </tr>

                    <tr>

                        <td class='required'>Application Name</td>

                        <td>Name of the application to undeploy, such as "webapp". </td>

                    </tr>

                    <tr>

                        <td>Enable Graceful Mode</td>

                        <td>Enables stopping the application in Graceful Mode after the existing HTTP clients

                        have completed their work.</td>

                    </tr>

                    <tr>

                        <td>Configuration Name</td>

                        <td>Name of the configuration to be used when the Administration Server URL and credentials

                        are retrieved.</td>

                    </tr>

                    <tr>

                        <td>Additional Commands</td>

                        <td>Additional commands to be entered in the weblogic.Deployer tool.</td>

                    </tr>

                    <tr>

                        <td>setDomainEnv Script Absolute Path</td>

                        <td>Absolute path of the setDomainEnv

                        script, including filename and extension.

                        For example, "/path/to/setDomainEnv.sh" or

                        "setDomainEnv.cmd".</td>

                    </tr>

                    <tr>

                        <td>weblogic jar Absolute Path</td>

                        <td>Absolute path of the weblogic.jar file that is 
												
                        required to run the Undeploy function. In a 

                        Windows environment, if the jar file is already

                        added to the environment classpath variable,

                        it is not necesary to include it. In a 

                        Linux environment, you must include the

                        path, such as "/path/to/weblogic.jar" or 

                        "/root/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar".</td>

                    </tr>

                </tbody>

            </table>

     
		 	</li>
						
		    <br />
	        <img src="../../plugins/EC-WebLogic/images/UndeployApp/EC-WLSUndeployApp2.png" />
		    <br />

		    </ol>   
						
		    <h3>Output</h3>
						
		    <p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The application was undeployed  
		        successfully.</p>
				
		    <img src="../../plugins/EC-WebLogic/images/UndeployApp/EC-WLSUndeployApp3.png" />
		
		    <p>In the <b>UndeployApp</b> step, click the Log button to see the diagnostic information:</p>
			
		    <img src="../../plugins/EC-WebLogic/images/UndeployApp/EC-WLSUndeployApp4.png" />.
							 
		</div>

        <h1 id="example">Examples and Use Cases</h1>

        <!-- This section is for examples and use cases, including screenshots of the new Parameter Panel with example values filled in.

                                    Unfortunately, I can't tell you what exactly to put here, but it's OK to put what seems like too much! Include both parameter

                                    values and output where appropriate. Use a separate 'h2' header for each example. Under the h2 header try to stay with the style

                                    outline used above where possible.

                                    -->



        <h2>RunWLST</h2>



        <p>In this example, the objective is to print "Hello

        World!" in an output device by using the <i>Supplied File</i> option

        with an existing script file in a path or the <i>New

        Script File</i> option with embedded code for the 
		
		<i>Script File Source</i> parameter.</p>
		
		<h3>Input</h3>
		
		<ol>
		
		<li>Go to the Plugin Manager and select the RunWLST procedure. </li>
		
		<li>Select the <i>Supplied File</i> or the <i>New Script File</i> option as the <i>Script File Source</i>, 
		
		and enter the following parameters:<br />
		
		This shows the parameters with the <i>Supplied File</i> option:<br />
		
		<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST2.png" /> <br />
		
		This shows the parameters with the <i>New Script File</i> option:<br />
		
		<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST3.png" />
		
		</li>
		
        </ol>
       
       <h3>Output</h3>
	   
	   	<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. The "Hello World!" 
		
		message is successfully printed with either of the <i>Script File Source</i> options (<i>Supplied File</i> or 
		
		<i>New Script File</i>). </p>
		
		<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST4.png" />
		
		<p>In the <b>RunWLST</b> step, click the Log button to see the diagnostic information similar to this:</p> 
		
		<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST5.png" />


        <p>This is the <i>HelloWorld.jython</i> file used in the <i>Supplied File</i> option:</p>
		<img src="../../plugins/EC-WebLogic/images/RunWLST/EC-WLSRunWLST6.png" />

    <h1 id="rns">Release Notes</h1>

		<h2>EC-WebLogic 2.0.7</h2>

        

	    <ul>

               <li>Fixed the manifest file.</li>

        </ul>	



        <h2>EC-WebLogic 2.0.6</h2>



        <ul>

            <li>Fixed typos in references to the createDataSource and deleteDataSource files in the manifest.pl so that the files are included correctly in the plugin jar.</li>

            <li>Fixed errors in the createDataSource procedure.</li>

        </ul>



        <h2>EC-WebLogic 2.0.5</h2>



		<ul>

			<li>Added four procedures to create datasources, delete datasources, suspend a server,  and resume a server.</li>

            <li>Fixed minor bugs.</li>

		</ul>



		<h2>EC-WebLogic 2.0.4</h2>



		<ul>

			<li>Procedure names were changed in the step picker section.</li>

		</ul>

		

        <h2>EC-WebLogic 2.0.3</h2>



        <ul>

            <li>Added a parameter in the start and stop server

            procedures to determine the maximum time in seconds to

            test the status of the server.</li>



            <li>Created two procedures to start and stop the Node Manager.</li>

        </ul>



        <h2>EC-WebLogic 2.0.2</h2>



        <ul>

            <li>Changes to Help files.</li>

        </ul>



        <h2>EC-WebLogic 2.0.1</h2>



        <ul>

            <li>Upgrade to use the new Parameter Form XML.</li>



            <li>Added a link directly to the new Help file.</li>

        </ul>



        <h2>EC-WebLogic 2.0.0</h2>



        <ul>

            <li>New Help Page Format.</li>



            <li>Add new Parameter Panels for each procedure.</li>



            <li>Add the <b>weblogic jar Absolute Path</b> parameter to

            the DeployApp, UndeployApp, StartApp, StopApp,

            RunDeployer and RunWLST procedures. It is required to a Linux

            environment to load WebLogic libreries.</li>

        </ul>



        <h2>EC-WebLogic 1.1.3</h2>



        <ul>

            <li>Add the <b>Administration Server URL</b> parameter to the

            StartManagedServer procedure.</li>



            <li>Fixed minor issues.</li>

        </ul>



        <h2>EC-WebLogic 1.1.1</h2>



        <ul>

            <li>Fix issue affecting workspace setting.</li>

        </ul>



        <h2>EC-WebLogic 1.1.0</h2>



        <ul>

            <li>Add the CheckPageStatus procedure.</li>



            <li>Modify the CheckServerProcedure procedure. CURL

            is not needed and parameters were changed.</li>



            <li>Fix minor bugs.</li>



            <li>Remove the CURL dependency.</li>



            <li>Add new postp matchers.</li>

        </ul>



        <h2>EC-WebLogic 1.0.2</h2>



        <ul>

            <li>Fixed minor bug on Configuration List page.</li>

        </ul>



        <h2>EC-WebLogic 1.0.1</h2>



        <ul>

            <li>Procedures that have only one step are executed

            using Perl directly.</li>



            <li>Credentials in the StartManagedServer procedure

            must be stored in a boot.properties file.</li>

        </ul>

    </div>

</body>

</html>

